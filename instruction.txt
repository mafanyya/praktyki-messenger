1. Touch docker-compose.yml

2. Define database container
   version: '3.8'

   services:

     database:
       container_name: database_NAMEE
       image: mysql:8.0
       command: --default-authentication-plugin=mysql_native_password
       environment:
         MYSQL_ROOT_PASSWORD: secret
         MYSQL_DATABASE: NAMEE
         MYSQL_USER: symfony
         MYSQL_PASSWORD: symfony
       ports:
         - '4306:3306'
       volumes:
         - ./mysql:/var/lib/mysql


3. Define PHP container

3.1 In the root of the project create php folder  "NAME/php" and add to the Dockerfile

FROM php:8.0-fpm

RUN apt update \
    && apt install -y zlib1g-dev g++ git libicu-dev zip libzip-dev zip \
    && docker-php-ext-install intl opcache pdo pdo_mysql \
    && pecl install apcu \
    && docker-php-ext-enable apcu \
    && docker-php-ext-configure zip \
    && docker-php-ext-install zip

WORKDIR /var/www/NAMEE

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

RUN curl -sS https://get.symfony.com/cli/installer | bash
RUN mv /root/.symfony/bin/symfony /usr/local/bin/symfony
RUN git config --global user.email "mafanya.nyaa@gmail.com" \ && git config --global user.name "mafanyya"

3.2 Add to the docker-compose file:

php:
    container_name: php
    build:
      context: ./php
    ports:
      - '9000:9000'
    volumes:
      - ./app:/var/www/NAMME
    depends_on:
      - database

4. In the root of the project create app directory "NAMEE/app".

5. In the root of the project create nginx directory "NAMME/nginx", and in it create default.conf:

server {

    listen 80;
    index index.php;
    server_name localhost;
    root /var/www/NAMME/public;
    error_log /var/log/nginx/project_error.log;
    access_log /var/log/nginx/project_access.log;

    location / {
        try_files $uri /index.php$is_args$args;
    }

    location ~ ^/index\\.php(/|$) {
        fastcgi_pass php:9000;
        fastcgi_split_path_info ^(.+\\.php)(/.*)$;
        include fastcgi_params;

        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;

        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;

        internal;
    }

    location ~ \\.php$ {
        return 404;
    }

}

5.1 Add to the docker-compose nginx container:

nginx:
    container_name: nginx
    image: nginx:stable-alpine
    ports:
      - '8080:80'
    volumes:
      - ./app:/var/www/NAMEE
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - database


6.  docker-compose up -d --build

7.  docker-compose exec php /bin/bash

8.  symfony check:requirements

9.  symfony new .

10. composer req --dev maker ormfixtures fakerphp/faker

11. composer req doctrine twig

12. cp .env .env.local

13. chmod -R 777 ./

14. In the "app/.env.local" change URL DATABASE:
DATABASE_URL="mysql://root:secret@database:3306/NAMEE?serverVersion=8.0"

-----------------------------
version: '3.8'

services:

  database:
    container_name: database_NAMEE
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: NAMEE
      MYSQL_USER: symfony
      MYSQL_PASSWORD: symfony
    ports:
      - '4306:3306'
    volumes:
      - ./mysql:/var/lib/mysql


  php:
    container_name: php_NAMEE
    build:
      context: ./php
    ports:
      - '9000:9000'
    volumes:
      - ./app:/var/www/NAMEE
    depends_on:
      - database


  nginx:
    container_name: nginx_NAMEE
    image: nginx:stable-alpine
    ports:
      - '8080:80'
    volumes:
      - ./app:/var/www/NAMEE
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - database











